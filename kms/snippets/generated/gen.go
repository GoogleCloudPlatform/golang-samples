// Copyright 2017 Google Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.

//+build ignore

package main

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"log"
	"strings"
)

func main() {
	tmpl, err := ioutil.ReadFile("generated/sample-template.go")
	if err != nil {
		log.Fatal("ReadFile:", err)
	}

	// strip build tag from the top of the file.
	start := bytes.Index(tmpl, []byte("\npackage "))
	tmpl = tmpl[start+1:]

	out := &bytes.Buffer{}

	// Header.
	fmt.Fprintln(out, header)

	normal := string(tmpl)
	normal = strings.Replace(normal, boilerplateSentinel, boilerplate, -1)
	out.WriteString(normal)

	if err := ioutil.WriteFile("snippet_test.go", out.Bytes(), 0640); err != nil {
		log.Fatal(err)
	}
}

const boilerplateSentinel = "\tvar client *cloudkms.Service // Boilerplate is inserted by gen.go\n"

const boilerplate = `	ctx := context.Background()
	authedClient, err := google.DefaultClient(ctx, cloudkms.CloudPlatformScope)
	if err != nil {
		return err
	}
	client, err := cloudkms.New(authedClient)
	if err != nil {
		return err
	}
`

const header = `// Copyright 2017 Google Inc. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.

//go:generate go run generated/gen.go

// DO NOT EDIT THIS FILE.
// It is generated from the source in generated/sample-template.go
`
